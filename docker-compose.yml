version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ratethatclass
    volumes:
      # mount a host folder full of .sql/.sh into the init dir
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - TYPE=service_account
      - UNIVERSE_DOMAIN=googleapis.com
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_NAME=ratethatclass
      - DB_PORT=5432
      - TOKEN_URI=https://oauth2.googleapis.com/token
      - AUTH_URI=https://accounts.google.com/o/oauth2/auth
      - AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
      # Firebase Configuration - Replace with your Firebase Admin project values
      - CLIENT_EMAIL=your_client_email
      - CLIENT_ID=your_client_id
      - CLIENT_X509_CERT_URL=your_client_cert_url
      - PRIVATE_KEY=your_private_key
      - PRIVATE_KEY_ID=your_private_key_id
      - PROJECT_ID=your_project_id
    
    restart: unless-stopped
    depends_on:
      - postgres

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_URL=http://localhost:3001
      # Firebase Configuration - Replace with your Firebase project values
      - NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_auth_domain
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_storage_bucket
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id
      - NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id
    restart: unless-stopped
    depends_on:
      - server

volumes:
  postgres_data:
